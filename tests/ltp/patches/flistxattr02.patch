diff --git a/testcases/kernel/syscalls/flistxattr/flistxattr02.c b/testcases/kernel/syscalls/flistxattr/flistxattr02.c
index 13aa0b7e7..25defe2c8 100644
--- a/testcases/kernel/syscalls/flistxattr/flistxattr02.c
+++ b/testcases/kernel/syscalls/flistxattr/flistxattr02.c
@@ -17,14 +17,20 @@
 * 2) flistxattr(2) should return -1 and set errno to EBADF.
 */
 
+/* Currently xattr is not enabled while mounting root file system. Patch is
+ * to mount root file system with xattr enabled and then use it for the test.
+*/
+
+#include <stdio.h>
 #include "config.h"
 #include <errno.h>
 #include <sys/types.h>
 
 #ifdef HAVE_SYS_XATTR_H
-# include <sys/xattr.h>
+#include <sys/xattr.h>
 #endif
 
+#include <sys/mount.h>
 #include "tst_test.h"
 
 #ifdef HAVE_SYS_XATTR_H
@@ -33,6 +39,13 @@
 #define VALUE	"test"
 #define VALUE_SIZE	(sizeof(VALUE) - 1)
 
+#define MNTPOINT        "mntpoint"
+#define DIR_MODE        (S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH)
+#define FILE_MODE       (S_IRWXU | S_IRWXG | S_IRWXO | S_ISUID | S_ISGID)
+#define TESTFILE "mntpoint/flistxattr02testfile"
+static const char *device = "/dev/vda";
+static const char *fs_type = "ext4";
+
 static int fd1;
 static int fd2 = -1;
 
@@ -70,7 +83,11 @@ static void verify_flistxattr(unsigned int n)
 
 static void setup(void)
 {
-	fd1 = SAFE_OPEN("testfile", O_RDWR | O_CREAT, 0644);
+	rmdir(MNTPOINT);
+	SAFE_MKDIR(MNTPOINT, DIR_MODE);
+	SAFE_MOUNT(device, MNTPOINT, fs_type, 0, "user_xattr");
+
+	fd1 = SAFE_OPEN(TESTFILE, O_RDWR | O_CREAT, 0644);
 
 	SAFE_FSETXATTR(fd1, SECURITY_KEY, VALUE, VALUE_SIZE, XATTR_CREATE);
 }
@@ -79,6 +96,10 @@ static void cleanup(void)
 {
 	if (fd1 > 0)
 		SAFE_CLOSE(fd1);
+	remove(TESTFILE);
+	umount(MNTPOINT);
+	rmdir(MNTPOINT);
+
 }
 
 static struct tst_test test = {
